<?php

namespace Bundles\Category\ModelBundle\Repository;

use Bundles\Product\ModelBundle\Entity\Product;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * ClassificationProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClassificationProductRepository extends EntityRepository
{
    /**
     * @param string  $nmsp  Namespace of strategy
     * @param integer $catId Id of classification
     *
     * @return QueryBuilder
     */
    public function getAllProductsInGroupByIdQueryBuilder($nmsp, $catId)
    {
        $qb = $this->getQueryBuilder()
            ->addSelect('p')
            ->leftJoin('cp.product', 'p')
            ->where('cp.nmsps = :curnmsps')
            ->andWhere('cp.classification = :curcat')
            ->setParameters(
                [
                    'curnmsps' => $nmsp,
                    'curcat'   => $catId,
                ]
            );

        return $qb;
    }

    /**
     * @param string  $nmsp  Namespace of strategy
     * @param integer $catId Id of classification
     *
     * @return \Doctrine\ORM\Query
     */
    public function getAllProductsInGroupByIdQuery($nmsp, $catId)
    {
        return $this->getAllProductsInGroupByIdQueryBuilder($nmsp, $catId)->getQuery();
    }

    /**
     * @param string  $nmsp  Namespace of strategy
     * @param integer $catId Id of classification
     *
     * @return string
     */
    public function getQuantityRelativeProducts($nmsp, $catId)
    {
        $qb = $this->getQueryBuilder();
        $qb
            ->select($qb->expr()->count('cp.id'))
            ->where('cp.nmsps = :curnmsps')
            ->andWhere('cp.classification = :curcat')
            ->setParameters(
                [
                    'curnmsps' => $nmsp,
                    'curcat'   => $catId,
                ]
            );

        return $qb->getQuery()->getSingleScalarResult();
    }

    /**
     * @param string  $nmsps Namespace of strategy
     * @param Product $prod
     *
     * @return \Doctrine\ORM\Query
     */
    public function getCategoryByProductQuery($nmsps, $prod)
    {
        return $this->getCategoryByProductQueryBuilder($nmsps, $prod)->getQuery();
    }

    /**
     * @param string  $nmsps Namespace of strategy
     * @param Product $prod
     *
     * @return QueryBuilder
     */
    public function getCategoryByProductQueryBuilder($nmsps, $prod)
    {
        $qb = $this->getQueryBuilder()
            ->where('cp.nmsps = :curnmsps')
            ->andWhere('cp.product = :prod')
            ->setParameters(
                [
                    'curnmsps' => $nmsps,
                    'prod'     => $prod,
                ]
            );

        return $qb;
    }

    /**
     * @return QueryBuilder
     */
    private function getQueryBuilder()
    {
        $em = $this->getEntityManager();
        $qb = $em->getRepository('CategoryModelBundle:ClassificationProduct')
            ->createQueryBuilder('cp');

        return $qb;
    }
}
